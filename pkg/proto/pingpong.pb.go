// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: pingpong.proto

package pingpong

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewGame       bool                   `protobuf:"varint,1,opt,name=new_game,json=newGame,proto3" json:"new_game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_pingpong_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{0}
}

func (x *StartRequest) GetNewGame() bool {
	if x != nil {
		return x.NewGame
	}
	return false
}

type MatchEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          string                 `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Player        string                 `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	Power         int32                  `protobuf:"varint,3,opt,name=power,proto3" json:"power,omitempty"`
	Goroutine     string                 `protobuf:"bytes,4,opt,name=goroutine,proto3" json:"goroutine,omitempty"`
	MatchNumber   int32                  `protobuf:"varint,5,opt,name=match_number,json=matchNumber,proto3" json:"match_number,omitempty"`
	Duration      int64                  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	EventType     string                 `protobuf:"bytes,7,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // "hit" or "game_over"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchEvent) Reset() {
	*x = MatchEvent{}
	mi := &file_pingpong_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchEvent) ProtoMessage() {}

func (x *MatchEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchEvent.ProtoReflect.Descriptor instead.
func (*MatchEvent) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{1}
}

func (x *MatchEvent) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *MatchEvent) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *MatchEvent) GetPower() int32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *MatchEvent) GetGoroutine() string {
	if x != nil {
		return x.Goroutine
	}
	return ""
}

func (x *MatchEvent) GetMatchNumber() int32 {
	if x != nil {
		return x.MatchNumber
	}
	return 0
}

func (x *MatchEvent) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MatchEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

type LatestMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchNumber   int32                  `protobuf:"varint,1,opt,name=match_number,json=matchNumber,proto3" json:"match_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestMatch) Reset() {
	*x = LatestMatch{}
	mi := &file_pingpong_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestMatch) ProtoMessage() {}

func (x *LatestMatch) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestMatch.ProtoReflect.Descriptor instead.
func (*LatestMatch) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{2}
}

func (x *LatestMatch) GetMatchNumber() int32 {
	if x != nil {
		return x.MatchNumber
	}
	return 0
}

type PlayerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerRequest) Reset() {
	*x = PlayerRequest{}
	mi := &file_pingpong_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRequest) ProtoMessage() {}

func (x *PlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRequest.ProtoReflect.Descriptor instead.
func (*PlayerRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type PlayerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TotalGames    int32                  `protobuf:"varint,3,opt,name=total_games,json=totalGames,proto3" json:"total_games,omitempty"`
	Wins          int32                  `protobuf:"varint,4,opt,name=wins,proto3" json:"wins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	mi := &file_pingpong_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerInfo) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerInfo) GetTotalGames() int32 {
	if x != nil {
		return x.TotalGames
	}
	return 0
}

func (x *PlayerInfo) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

type PlayerStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Win           bool                   `protobuf:"varint,2,opt,name=win,proto3" json:"win,omitempty"`
	PowerUsed     int32                  `protobuf:"varint,3,opt,name=power_used,json=powerUsed,proto3" json:"power_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	mi := &file_pingpong_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerStats) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerStats) GetWin() bool {
	if x != nil {
		return x.Win
	}
	return false
}

func (x *PlayerStats) GetPowerUsed() int32 {
	if x != nil {
		return x.PowerUsed
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_pingpong_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{6}
}

var File_pingpong_proto protoreflect.FileDescriptor

const file_pingpong_proto_rawDesc = "" +
	"\n" +
	"\x0epingpong.proto\x12\bpingpong\")\n" +
	"\fStartRequest\x12\x19\n" +
	"\bnew_game\x18\x01 \x01(\bR\anewGame\"\xca\x01\n" +
	"\n" +
	"MatchEvent\x12\x12\n" +
	"\x04time\x18\x01 \x01(\tR\x04time\x12\x16\n" +
	"\x06player\x18\x02 \x01(\tR\x06player\x12\x14\n" +
	"\x05power\x18\x03 \x01(\x05R\x05power\x12\x1c\n" +
	"\tgoroutine\x18\x04 \x01(\tR\tgoroutine\x12!\n" +
	"\fmatch_number\x18\x05 \x01(\x05R\vmatchNumber\x12\x1a\n" +
	"\bduration\x18\x06 \x01(\x03R\bduration\x12\x1d\n" +
	"\n" +
	"event_type\x18\a \x01(\tR\teventType\"0\n" +
	"\vLatestMatch\x12!\n" +
	"\fmatch_number\x18\x01 \x01(\x05R\vmatchNumber\",\n" +
	"\rPlayerRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"r\n" +
	"\n" +
	"PlayerInfo\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vtotal_games\x18\x03 \x01(\x05R\n" +
	"totalGames\x12\x12\n" +
	"\x04wins\x18\x04 \x01(\x05R\x04wins\"[\n" +
	"\vPlayerStats\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x10\n" +
	"\x03win\x18\x02 \x01(\bR\x03win\x12\x1d\n" +
	"\n" +
	"power_used\x18\x03 \x01(\x05R\tpowerUsed\"\a\n" +
	"\x05Empty2\x8a\x01\n" +
	"\fTableService\x12>\n" +
	"\n" +
	"StartMatch\x12\x16.pingpong.StartRequest\x1a\x14.pingpong.MatchEvent\"\x000\x01\x12:\n" +
	"\x0eGetLatestMatch\x12\x0f.pingpong.Empty\x1a\x15.pingpong.LatestMatch\"\x002\x90\x01\n" +
	"\rPlayerService\x12@\n" +
	"\rGetPlayerInfo\x12\x17.pingpong.PlayerRequest\x1a\x14.pingpong.PlayerInfo\"\x00\x12=\n" +
	"\x11UpdatePlayerStats\x12\x15.pingpong.PlayerStats\x1a\x0f.pingpong.Empty\"\x00B\fZ\n" +
	".;pingpongb\x06proto3"

var (
	file_pingpong_proto_rawDescOnce sync.Once
	file_pingpong_proto_rawDescData []byte
)

func file_pingpong_proto_rawDescGZIP() []byte {
	file_pingpong_proto_rawDescOnce.Do(func() {
		file_pingpong_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pingpong_proto_rawDesc), len(file_pingpong_proto_rawDesc)))
	})
	return file_pingpong_proto_rawDescData
}

var file_pingpong_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pingpong_proto_goTypes = []any{
	(*StartRequest)(nil),  // 0: pingpong.StartRequest
	(*MatchEvent)(nil),    // 1: pingpong.MatchEvent
	(*LatestMatch)(nil),   // 2: pingpong.LatestMatch
	(*PlayerRequest)(nil), // 3: pingpong.PlayerRequest
	(*PlayerInfo)(nil),    // 4: pingpong.PlayerInfo
	(*PlayerStats)(nil),   // 5: pingpong.PlayerStats
	(*Empty)(nil),         // 6: pingpong.Empty
}
var file_pingpong_proto_depIdxs = []int32{
	0, // 0: pingpong.TableService.StartMatch:input_type -> pingpong.StartRequest
	6, // 1: pingpong.TableService.GetLatestMatch:input_type -> pingpong.Empty
	3, // 2: pingpong.PlayerService.GetPlayerInfo:input_type -> pingpong.PlayerRequest
	5, // 3: pingpong.PlayerService.UpdatePlayerStats:input_type -> pingpong.PlayerStats
	1, // 4: pingpong.TableService.StartMatch:output_type -> pingpong.MatchEvent
	2, // 5: pingpong.TableService.GetLatestMatch:output_type -> pingpong.LatestMatch
	4, // 6: pingpong.PlayerService.GetPlayerInfo:output_type -> pingpong.PlayerInfo
	6, // 7: pingpong.PlayerService.UpdatePlayerStats:output_type -> pingpong.Empty
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pingpong_proto_init() }
func file_pingpong_proto_init() {
	if File_pingpong_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pingpong_proto_rawDesc), len(file_pingpong_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pingpong_proto_goTypes,
		DependencyIndexes: file_pingpong_proto_depIdxs,
		MessageInfos:      file_pingpong_proto_msgTypes,
	}.Build()
	File_pingpong_proto = out.File
	file_pingpong_proto_goTypes = nil
	file_pingpong_proto_depIdxs = nil
}
